<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amulet_ButchersFetish" xml:space="preserve">
    <value>Butcher's Fetish</value>
  </data>
  <data name="Amulet_ChainsOfAmplification" xml:space="preserve">
    <value>Chains of Amplification</value>
  </data>
  <data name="Amulet_NimuesRibbon" xml:space="preserve">
    <value>Nimue's Ribbon</value>
  </data>
  <data name="Armor_Body" xml:space="preserve">
    <value>상의</value>
  </data>
  <data name="Armor_Challenger" xml:space="preserve">
    <value>도전자</value>
  </data>
  <data name="Armor_Gloves" xml:space="preserve">
    <value>장갑</value>
  </data>
  <data name="Armor_Gunslinger" xml:space="preserve">
    <value>총잡이</value>
  </data>
  <data name="Armor_Handler" xml:space="preserve">
    <value>핸들러</value>
  </data>
  <data name="Armor_Head" xml:space="preserve">
    <value>머리</value>
  </data>
  <data name="Armor_Hunter" xml:space="preserve">
    <value>사냥꾼</value>
  </data>
  <data name="Armor_Legs" xml:space="preserve">
    <value>하의</value>
  </data>
  <data name="Armor_Medic" xml:space="preserve">
    <value>위생병</value>
  </data>
  <data name="Armor_Radiant" xml:space="preserve">
    <value>Radiant</value>
  </data>
  <data name="Armor_Void" xml:space="preserve">
    <value>Void</value>
  </data>
  <data name="Base" xml:space="preserve">
    <value>지구</value>
  </data>
  <data name="Boss" xml:space="preserve">
    <value>월드 보스</value>
  </data>
  <data name="ClockTower" xml:space="preserve">
    <value>The Clock Tower</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>이벤트</value>
  </data>
  <data name="Fae" xml:space="preserve">
    <value>로섬</value>
  </data>
  <data name="FaelinFaerlin_POI" xml:space="preserve">
    <value>파에린 / 파엘린</value>
  </data>
  <data name="FaeShamanRing" xml:space="preserve">
    <value>Fae Shaman Ring</value>
  </data>
  <data name="FaeWarriorRing" xml:space="preserve">
    <value>Fae Warrior Ring</value>
  </data>
  <data name="GoldenHall_Nimue" xml:space="preserve">
    <value>Nimue's Retreat</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>거점</value>
  </data>
  <data name="IndignantFetish" xml:space="preserve">
    <value>Indignant Fetish</value>
  </data>
  <data name="Injectable" xml:space="preserve">
    <value>추가 이벤트</value>
  </data>
  <data name="Jungle" xml:space="preserve">
    <value>아에샤</value>
  </data>
  <data name="Labyrinth" xml:space="preserve">
    <value>미궁</value>
  </data>
  <data name="Main" xml:space="preserve">
    <value>지구</value>
  </data>
  <data name="MiniBoss" xml:space="preserve">
    <value>보스 던전</value>
  </data>
  <data name="Nerud" xml:space="preserve">
    <value>네루드</value>
  </data>
  <data name="OverworldPOI" xml:space="preserve">
    <value>월드 POI</value>
  </data>
  <data name="Ring_AcidStone" xml:space="preserve">
    <value>Acid Stone</value>
  </data>
  <data name="Ring_AnastasijasInspiration" xml:space="preserve">
    <value>Anastasia's Inspiration</value>
  </data>
  <data name="Ring_BoosterRing" xml:space="preserve">
    <value>Booster Ring</value>
  </data>
  <data name="Ring_HexWard" xml:space="preserve">
    <value>Hex Ward</value>
  </data>
  <data name="Ring_SoulLink" xml:space="preserve">
    <value>Soul Link</value>
  </data>
  <data name="Ring_StreamCoupler" xml:space="preserve">
    <value>Stream Coupler Ring</value>
  </data>
  <data name="Root Earth" xml:space="preserve">
    <value>루트 지구</value>
  </data>
  <data name="SideD" xml:space="preserve">
    <value>사이드 던전</value>
  </data>
  <data name="ThreeMenMorris" xml:space="preserve">
    <value>The Postulant</value>
  </data>
  <data name="TraitBook" xml:space="preserve">
    <value>Tome of Knowledge</value>
  </data>
  <data name="Ward13" xml:space="preserve">
    <value>와드 13</value>
  </data>
</root>